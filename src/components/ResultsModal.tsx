import React from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { useGameStore } from '../stores/gameStore';
import confetti from 'canvas-confetti';
import { \n  TrophyIcon, \n  BoltIcon, \n  CheckCircleIcon, \n  ClockIcon,\n  XMarkIcon,\n  ShareIcon,\n  ArrowPathIcon\n} from '@heroicons/react/24/outline';\n\nconst ResultsModal: React.FC = () => {\n  const { \n    showResults, \n    wpm, \n    accuracy, \n    startTime, \n    endTime, \n    resetGame,\n    theme \n  } = useGameStore();\n  \n  React.useEffect(() => {\n    if (showResults && wpm > 60) {\n      // Trigger confetti for good performance\n      confetti({\n        particleCount: 100,\n        spread: 70,\n        origin: { y: 0.6 }\n      });\n    }\n  }, [showResults, wpm]);\n  \n  const getTimeElapsed = () => {\n    if (!startTime || !endTime) return 0;\n    return Math.floor((endTime - startTime) / 1000);\n  };\n  \n  const getPerformanceLevel = () => {\n    if (wpm >= 80) return { level: 'Legendary', color: 'text-yellow-400', icon: '🏆' };\n    if (wpm >= 60) return { level: 'Expert', color: 'text-purple-400', icon: '⭐' };\n    if (wpm >= 40) return { level: 'Advanced', color: 'text-blue-400', icon: '🚀' };\n    if (wpm >= 25) return { level: 'Intermediate', color: 'text-green-400', icon: '📈' };\n    return { level: 'Beginner', color: 'text-gray-400', icon: '🌱' };\n  };\n  \n  const performance = getPerformanceLevel();\n  \n  const handleShare = () => {\n    const text = `I just typed at ${wpm} WPM with ${accuracy}% accuracy! 🚀 Try to beat my score!`;\n    if (navigator.share) {\n      navigator.share({\n        title: 'Ultimate Typing Game Results',\n        text,\n        url: window.location.href\n      });\n    } else {\n      navigator.clipboard.writeText(text + ' ' + window.location.href);\n    }\n  };\n  \n  const getThemeClasses = () => {\n    switch (theme) {\n      case 'matrix':\n        return {\n          bg: 'bg-black/90 border-green-500',\n          text: 'text-green-400',\n          accent: 'text-green-300'\n        };\n      case 'cyberpunk':\n        return {\n          bg: 'bg-purple-900/90 border-pink-500',\n          text: 'text-pink-300',\n          accent: 'text-pink-400'\n        };\n      default:\n        return {\n          bg: 'bg-blue-900/90 border-neon-blue',\n          text: 'text-neon-blue',\n          accent: 'text-blue-300'\n        };\n    }\n  };\n  \n  const themeClasses = getThemeClasses();\n  \n  return (\n    <AnimatePresence>\n      {showResults && (\n        <motion.div\n          className=\"fixed inset-0 bg-black/80 backdrop-blur-sm flex items-center justify-center z-50 p-4\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n        >\n          <motion.div\n            className={`glass rounded-3xl p-8 max-w-md w-full border-2 ${themeClasses.bg}`}\n            initial={{ scale: 0.5, opacity: 0, y: 50 }}\n            animate={{ scale: 1, opacity: 1, y: 0 }}\n            exit={{ scale: 0.5, opacity: 0, y: 50 }}\n            transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n          >\n            {/* Header */}\n            <div className=\"text-center mb-6\">\n              <motion.div\n                className=\"text-6xl mb-2\"\n                animate={{ rotate: [0, 10, -10, 0] }}\n                transition={{ duration: 0.5, delay: 0.2 }}\n              >\n                {performance.icon}\n              </motion.div>\n              <h2 className={`text-3xl font-bold ${themeClasses.text} neon-text mb-2`}>\n                {performance.level}!\n              </h2>\n              <p className={`${themeClasses.accent}`}>\n                Amazing typing performance!\n              </p>\n            </div>\n            \n            {/* Stats Grid */}\n            <div className=\"grid grid-cols-2 gap-4 mb-6\">\n              <motion.div\n                className=\"text-center p-4 rounded-xl bg-white/5\"\n                whileHover={{ scale: 1.05 }}\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: 0.3 }}\n              >\n                <BoltIcon className=\"w-8 h-8 text-yellow-400 mx-auto mb-2\" />\n                <div className=\"text-2xl font-bold text-yellow-400\">{wpm}</div>\n                <div className=\"text-sm text-gray-400\">WPM</div>\n              </motion.div>\n              \n              <motion.div\n                className=\"text-center p-4 rounded-xl bg-white/5\"\n                whileHover={{ scale: 1.05 }}\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: 0.4 }}\n              >\n                <CheckCircleIcon className=\"w-8 h-8 text-green-400 mx-auto mb-2\" />\n                <div className=\"text-2xl font-bold text-green-400\">{accuracy}%</div>\n                <div className=\"text-sm text-gray-400\">Accuracy</div>\n              </motion.div>\n              \n              <motion.div\n                className=\"text-center p-4 rounded-xl bg-white/5\"\n                whileHover={{ scale: 1.05 }}\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: 0.5 }}\n              >\n                <ClockIcon className=\"w-8 h-8 text-blue-400 mx-auto mb-2\" />\n                <div className=\"text-2xl font-bold text-blue-400\">{getTimeElapsed()}s</div>\n                <div className=\"text-sm text-gray-400\">Time</div>\n              </motion.div>\n              \n              <motion.div\n                className=\"text-center p-4 rounded-xl bg-white/5\"\n                whileHover={{ scale: 1.05 }}\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: 0.6 }}\n              >\n                <TrophyIcon className=\"w-8 h-8 text-purple-400 mx-auto mb-2\" />\n                <div className=\"text-2xl font-bold text-purple-400\">{Math.floor(wpm * accuracy / 100)}</div>\n                <div className=\"text-sm text-gray-400\">Score</div>\n              </motion.div>\n            </div>\n            \n            {/* Action Buttons */}\n            <div className=\"flex gap-3\">\n              <motion.button\n                onClick={resetGame}\n                className=\"flex-1 flex items-center justify-center gap-2 py-3 px-4 rounded-xl bg-green-500/20 border border-green-500 text-green-400 hover:bg-green-500/30 transition-all duration-300\"\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <ArrowPathIcon className=\"w-5 h-5\" />\n                Play Again\n              </motion.button>\n              \n              <motion.button\n                onClick={handleShare}\n                className=\"flex items-center justify-center gap-2 py-3 px-4 rounded-xl bg-blue-500/20 border border-blue-500 text-blue-400 hover:bg-blue-500/30 transition-all duration-300\"\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <ShareIcon className=\"w-5 h-5\" />\n              </motion.button>\n            </div>\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default ResultsModal;